print('''           
 ,adPPYba, ,adPPYYba,  ,adPPYba, ,adPPYba, ,adPPYYba, 8b,dPPYba,  
a8"     "" ""     `Y8 a8P_____88 I8[    "" ""     `Y8 88P'   "Y8  
8b         ,adPPPPP88 8PP"""""""  `"Y8ba,  ,adPPPPP88 88          
"8a,   ,aa 88,    ,88 "8b,   ,aa aa    ]8I 88,    ,88 88          
 `"Ybbd8"' `"8bbdP"Y8  `"Ybbd8"' `"YbbdP"' `"8bbdP"Y8 88   
            88             88                                 
           ""             88                                 
                          88                                 
 ,adPPYba, 88 8b,dPPYba,  88,dPPYba,   ,adPPYba, 8b,dPPYba,  
a8"     "" 88 88P'    "8a 88P'    "8a a8P_____88 88P'   "Y8  
8b         88 88       d8 88       88 8PP""""""" 88          
"8a,   ,aa 88 88b,   ,a8" 88       88 "8b,   ,aa 88          
 `"Ybbd8"' 88 88`YbbdP"'  88       88  `"Ybbd8"' 88          
              88                                             
              88           
''')

alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

ALPHABET = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']

def caesar(cipher_direction, start_text, shift_amount):
  end_text = ""
  if direction == "decode":
    shift_amount *= -1
  for char in text:
    if not char in alphabet and not char in ALPHABET:
      end_text += char
    elif char in alphabet:
      end_text += alphabet[alphabet.index(char) + shift_amount]
    else:
      end_text += ALPHABET[ALPHABET.index(char) + shift_amount]
  print(f"Here's the {cipher_direction}d result: {end_text}")
  print()

run = "yes"
while run == "yes":
  
  direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n").lower()
  print()
  while direction != "encode" and direction != "decode" and direction != "end":
    direction = input("You entered an invalid instruction. If you wish to end, type 'end'.\nOtherwise type 'encode' to encrypt, type 'decode' to decrypt:\n").lower()
    print()
  if direction == "end":
    break
  text = input("Type your message:\n")
  print()
  shift = int(input("Type the shift number:\n"))
  shift %= 26
  print()
  
  caesar(cipher_direction=direction, start_text=text, shift_amount=shift)

  run = input("Type 'yes' if you want to go again. Otherwise type 'no' to end.\n").lower()
  print()
  while run != "yes" and run != "no":
    run = input("Invalid answer!\nType 'yes' if you want to go again. Otherwise type 'no' to end.\n").lower()
    print()
print("Goodbye! Have a great day.")
